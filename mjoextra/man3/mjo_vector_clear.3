.\"  Copyright (c) 2021 Mark J. Olesen
.\"
.\"  CC BY 4.0
.\"
.\"  This file is licensed under the Creative Commons Attribution 4.0 
.\"  International license.
.\"
.\"  You are free to:
.\"
.\"    Share --- copy and redistribute the material in any medium or format
.\" 
.\"    Adapt --- remix, transform, and build upon the material for any purpose,
.\"              even commercially
.\"
.\"  Under the following terms:
.\"
.\"    Attribution --- You must give appropriate credit, provide a link
.\"                    to the license, and indicate if changes were made. You
.\"                    may do so in any reasonable manner, but not in any way
.\"                    that suggests the licensor endorses you or your use.
.\"
.\"   Full text of this license can be found in 
.\"   '${MJO_EXTRA}/licenses/CC-BY-SA-4.0'or visit 
.\"   'http://creativecommons.org/licenses/by/4.0/' or send a letter 
.\"   to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
.\"
.\"  This file is part of mjoextra library
.\"
.Dd November 25, 2021
.Os
.Dt mvector
.Sh NAME
.Nm mjo_vector_clear
.Nd remove all elements from a vector
.Sh SYNOPSIS
.In mvector.h
.Ft void
.Fo mjo_vector_clear
.Fa "mjo_vector_t const io_var"
.Fc
.Sh DESCRIPTION
Iterate through all of the elements of a vector calling the discharge
method on the object, if any.
.Pp
Following is a description of the arguments.
.Bl -tag -width 5
.It Fa io_var
pointer to a
.So mjo_vector_t Sc
to clear
.El
.Pp
If 
.Fa io_var
is nil, the routine shall perform nothing.
.Sh NOTES
The block of memory held by the vector will not be released. 
That is, the vector will always grow in size but never shrink.
If this is not the desired effect, call 
.Fn mjo_vector_free
followed by
.Fn mjo_vector_malloc .
